# Automatically generated by pb2py
# fmt: off
import protobuf as p

from .BeamECCPoint import BeamECCPoint
from .BeamSignature import BeamSignature

if __debug__:
    try:
        from typing import Dict, List, Optional
    except ImportError:
        Dict, List, Optional = None, None, None  # type: ignore


class BeamVerifyMessage(p.MessageType):
    MESSAGE_WIRE_TYPE = 804

    def __init__(
        self,
        signature: BeamSignature = None,
        public_key: BeamECCPoint = None,
        message: bytes = None,
    ) -> None:
        self.signature = signature
        self.public_key = public_key
        self.message = message

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('signature', BeamSignature, 0),
            2: ('public_key', BeamECCPoint, 0),
            3: ('message', p.BytesType, 0),
        }
